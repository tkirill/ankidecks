# Models generated by datamodel-codegen:
#   filename:  gerund_or_infinitive.schema.json
#   timestamp: 2024-08-31T17:27:22+00:00

from __future__ import annotations

from dataclasses import dataclass
from enum import StrEnum
from typing import Dict, List, Optional
from json import load


class FollowedByEnum(StrEnum):
    gerund = 'gerund'
    infinitive = 'infinitive'
    bare_infinitive = 'bare_infinitive'


@dataclass
class GerundOrInfinitiveItem:
    verb: str
    followed_by: List[FollowedByEnum]


GerundOrInfinitive = Optional[Dict[str, GerundOrInfinitiveItem]]


def read_gerund_or_infinitive_data(filename: str) -> GerundOrInfinitive:
    with open(filename) as f:
        raw = load(f)
    result = dict()
    for key, val in raw.items():
        if key == '$schema':
            continue
        result[key] = GerundOrInfinitiveItem(val['verb'], [FollowedByEnum[x] for x in val['followed_by']])
    return result